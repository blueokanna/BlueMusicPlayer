//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace BlueMusicPlayer
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
        private global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[95];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "BlueMusicPlayer.Converters.EditModeTextConverter";
            _typeNameTable[5] = "BlueMusicPlayer.Converters.BoolToVisibilityConverter";
            _typeNameTable[6] = "BlueMusicPlayer.Converters.TrackInCollectionConverter";
            _typeNameTable[7] = "BlueMusicPlayer.Converters.PlayPauseGlyphConverter";
            _typeNameTable[8] = "BlueMusicPlayer.Converters.BoolToOpacityConverter";
            _typeNameTable[9] = "BlueMusicPlayer.Converters.BoolToAccentBrushConverter";
            _typeNameTable[10] = "BlueMusicPlayer.Converters.BoolToThicknessConverter";
            _typeNameTable[11] = "BlueMusicPlayer.Converters.NullToOpacityConverter";
            _typeNameTable[12] = "BlueMusicPlayer.Converters.EnhancedBoolToOpacityConverter";
            _typeNameTable[13] = "BlueMusicPlayer.Converters.LoginStatusConverter";
            _typeNameTable[14] = "BlueMusicPlayer.Converters.StringToVisibilityConverter";
            _typeNameTable[15] = "BlueMusicPlayer.Converters.InvertedStringToVisibilityConverter";
            _typeNameTable[16] = "BlueMusicPlayer.Converters.InverseBoolToVisibilityConverter";
            _typeNameTable[17] = "BlueMusicPlayer.Converters.LoadingAndCountVisibilityConverter";
            _typeNameTable[18] = "BlueMusicPlayer.Converters.CollectionCountToVisibilityConverter";
            _typeNameTable[19] = "BlueMusicPlayer.Converters.ObjectToBoolConverter";
            _typeNameTable[20] = "BlueMusicPlayer.Converters.InvertedBoolToVisibilityConverter";
            _typeNameTable[21] = "BlueMusicPlayer.Converters.InverseBoolConverter";
            _typeNameTable[22] = "BlueMusicPlayer.Converters.BoolToLoginStatusConverter";
            _typeNameTable[23] = "Windows.UI.Color";
            _typeNameTable[24] = "System.ValueType";
            _typeNameTable[25] = "Byte";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[29] = "System.Enum";
            _typeNameTable[30] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[31] = "Double";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[34] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[36] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[37] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[41] = "String";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[44] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[45] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[46] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[50] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[54] = "Microsoft.UI.Xaml.Controls.Primitives.ToggleButton";
            _typeNameTable[55] = "Microsoft.UI.Xaml.Controls.ListViewItem";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.Button";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[59] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[61] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[62] = "Int32";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings";
            _typeNameTable[65] = "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText";
            _typeNameTable[66] = "Microsoft.UI.Xaml.Media.Animation.RepeatBehavior";
            _typeNameTable[67] = "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior";
            _typeNameTable[68] = "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection";
            _typeNameTable[69] = "Windows.UI.Text.TextDecorations";
            _typeNameTable[70] = "BlueMusicPlayer.Views.LocalMusicView";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[72] = "BlueMusicPlayer.Views.NetEaseMusicView";
            _typeNameTable[73] = "BlueMusicPlayer.MainMusicWindow";
            _typeNameTable[74] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[75] = "BlueMusicPlayer.Views.QrLoginWindow";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Controls.ItemsRepeater";
            _typeNameTable[77] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[78] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[79] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[80] = "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider";
            _typeNameTable[81] = "Microsoft.UI.Xaml.Controls.ItemsSourceView";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.StackLayout";
            _typeNameTable[83] = "Microsoft.UI.Xaml.Controls.VirtualizingLayout";
            _typeNameTable[84] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation";
            _typeNameTable[86] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[87] = "BlueMusicPlayer.Converters.EmptyStringToVisibilityConverter";
            _typeNameTable[88] = "Microsoft.UI.Xaml.Controls.InfoBar";
            _typeNameTable[89] = "Microsoft.UI.Xaml.Controls.InfoBarSeverity";
            _typeNameTable[90] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[91] = "System.Windows.Input.ICommand";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings";
            _typeNameTable[93] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[94] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[95];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::BlueMusicPlayer.Converters.EditModeTextConverter);
            _typeTable[5] = typeof(global::BlueMusicPlayer.Converters.BoolToVisibilityConverter);
            _typeTable[6] = typeof(global::BlueMusicPlayer.Converters.TrackInCollectionConverter);
            _typeTable[7] = typeof(global::BlueMusicPlayer.Converters.PlayPauseGlyphConverter);
            _typeTable[8] = typeof(global::BlueMusicPlayer.Converters.BoolToOpacityConverter);
            _typeTable[9] = typeof(global::BlueMusicPlayer.Converters.BoolToAccentBrushConverter);
            _typeTable[10] = typeof(global::BlueMusicPlayer.Converters.BoolToThicknessConverter);
            _typeTable[11] = typeof(global::BlueMusicPlayer.Converters.NullToOpacityConverter);
            _typeTable[12] = typeof(global::BlueMusicPlayer.Converters.EnhancedBoolToOpacityConverter);
            _typeTable[13] = typeof(global::BlueMusicPlayer.Converters.LoginStatusConverter);
            _typeTable[14] = typeof(global::BlueMusicPlayer.Converters.StringToVisibilityConverter);
            _typeTable[15] = typeof(global::BlueMusicPlayer.Converters.InvertedStringToVisibilityConverter);
            _typeTable[16] = typeof(global::BlueMusicPlayer.Converters.InverseBoolToVisibilityConverter);
            _typeTable[17] = typeof(global::BlueMusicPlayer.Converters.LoadingAndCountVisibilityConverter);
            _typeTable[18] = typeof(global::BlueMusicPlayer.Converters.CollectionCountToVisibilityConverter);
            _typeTable[19] = typeof(global::BlueMusicPlayer.Converters.ObjectToBoolConverter);
            _typeTable[20] = typeof(global::BlueMusicPlayer.Converters.InvertedBoolToVisibilityConverter);
            _typeTable[21] = typeof(global::BlueMusicPlayer.Converters.InverseBoolConverter);
            _typeTable[22] = typeof(global::BlueMusicPlayer.Converters.BoolToLoginStatusConverter);
            _typeTable[23] = typeof(global::Windows.UI.Color);
            _typeTable[24] = typeof(global::System.ValueType);
            _typeTable[25] = typeof(global::System.Byte);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[29] = typeof(global::System.Enum);
            _typeTable[30] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[31] = typeof(global::System.Double);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[36] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[37] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[41] = typeof(global::System.String);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[44] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[45] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[50] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.Controls.ListViewItem);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.Button);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[59] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[62] = typeof(global::System.Int32);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings);
            _typeTable[65] = typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.Media.Animation.RepeatBehavior);
            _typeTable[67] = typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior);
            _typeTable[68] = typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection);
            _typeTable[69] = typeof(global::Windows.UI.Text.TextDecorations);
            _typeTable[70] = typeof(global::BlueMusicPlayer.Views.LocalMusicView);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[72] = typeof(global::BlueMusicPlayer.Views.NetEaseMusicView);
            _typeTable[73] = typeof(global::BlueMusicPlayer.MainMusicWindow);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[75] = typeof(global::BlueMusicPlayer.Views.QrLoginWindow);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater);
            _typeTable[77] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[78] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider);
            _typeTable[81] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.StackLayout);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout);
            _typeTable[84] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation);
            _typeTable[86] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[87] = typeof(global::BlueMusicPlayer.Converters.EmptyStringToVisibilityConverter);
            _typeTable[88] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBar);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity);
            _typeTable[90] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[91] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings);
            _typeTable[93] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[94] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_EditModeTextConverter() { return new global::BlueMusicPlayer.Converters.EditModeTextConverter(); }
        private object Activate_5_BoolToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.BoolToVisibilityConverter(); }
        private object Activate_6_TrackInCollectionConverter() { return new global::BlueMusicPlayer.Converters.TrackInCollectionConverter(); }
        private object Activate_7_PlayPauseGlyphConverter() { return new global::BlueMusicPlayer.Converters.PlayPauseGlyphConverter(); }
        private object Activate_8_BoolToOpacityConverter() { return new global::BlueMusicPlayer.Converters.BoolToOpacityConverter(); }
        private object Activate_9_BoolToAccentBrushConverter() { return new global::BlueMusicPlayer.Converters.BoolToAccentBrushConverter(); }
        private object Activate_10_BoolToThicknessConverter() { return new global::BlueMusicPlayer.Converters.BoolToThicknessConverter(); }
        private object Activate_11_NullToOpacityConverter() { return new global::BlueMusicPlayer.Converters.NullToOpacityConverter(); }
        private object Activate_12_EnhancedBoolToOpacityConverter() { return new global::BlueMusicPlayer.Converters.EnhancedBoolToOpacityConverter(); }
        private object Activate_13_LoginStatusConverter() { return new global::BlueMusicPlayer.Converters.LoginStatusConverter(); }
        private object Activate_14_StringToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.StringToVisibilityConverter(); }
        private object Activate_15_InvertedStringToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.InvertedStringToVisibilityConverter(); }
        private object Activate_16_InverseBoolToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.InverseBoolToVisibilityConverter(); }
        private object Activate_17_LoadingAndCountVisibilityConverter() { return new global::BlueMusicPlayer.Converters.LoadingAndCountVisibilityConverter(); }
        private object Activate_18_CollectionCountToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.CollectionCountToVisibilityConverter(); }
        private object Activate_19_ObjectToBoolConverter() { return new global::BlueMusicPlayer.Converters.ObjectToBoolConverter(); }
        private object Activate_20_InvertedBoolToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.InvertedBoolToVisibilityConverter(); }
        private object Activate_21_InverseBoolConverter() { return new global::BlueMusicPlayer.Converters.InverseBoolConverter(); }
        private object Activate_22_BoolToLoginStatusConverter() { return new global::BlueMusicPlayer.Converters.BoolToLoginStatusConverter(); }
        private object Activate_26_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_44_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_46_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_49_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_51_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_57_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_60_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_64_InfoBadgeTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings(); }
        private object Activate_65_MarqueeText() { return new global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText(); }
        private object Activate_70_LocalMusicView() { return new global::BlueMusicPlayer.Views.LocalMusicView(); }
        private object Activate_72_NetEaseMusicView() { return new global::BlueMusicPlayer.Views.NetEaseMusicView(); }
        private object Activate_73_MainMusicWindow() { return new global::BlueMusicPlayer.MainMusicWindow(); }
        private object Activate_76_ItemsRepeater() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeater(); }
        private object Activate_80_ItemCollectionTransitionProvider() { return new global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider(); }
        private object Activate_82_StackLayout() { return new global::Microsoft.UI.Xaml.Controls.StackLayout(); }
        private object Activate_83_VirtualizingLayout() { return new global::Microsoft.UI.Xaml.Controls.VirtualizingLayout(); }
        private object Activate_87_EmptyStringToVisibilityConverter() { return new global::BlueMusicPlayer.Converters.EmptyStringToVisibilityConverter(); }
        private object Activate_88_InfoBar() { return new global::Microsoft.UI.Xaml.Controls.InfoBar(); }
        private object Activate_92_InfoBarTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings(); }
        private object Activate_93_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_EditModeTextConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.EditModeTextConverter).TypeHandle);
        private void StaticInitializer_5_BoolToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.BoolToVisibilityConverter).TypeHandle);
        private void StaticInitializer_6_TrackInCollectionConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.TrackInCollectionConverter).TypeHandle);
        private void StaticInitializer_7_PlayPauseGlyphConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.PlayPauseGlyphConverter).TypeHandle);
        private void StaticInitializer_8_BoolToOpacityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.BoolToOpacityConverter).TypeHandle);
        private void StaticInitializer_9_BoolToAccentBrushConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.BoolToAccentBrushConverter).TypeHandle);
        private void StaticInitializer_10_BoolToThicknessConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.BoolToThicknessConverter).TypeHandle);
        private void StaticInitializer_11_NullToOpacityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.NullToOpacityConverter).TypeHandle);
        private void StaticInitializer_12_EnhancedBoolToOpacityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.EnhancedBoolToOpacityConverter).TypeHandle);
        private void StaticInitializer_13_LoginStatusConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.LoginStatusConverter).TypeHandle);
        private void StaticInitializer_14_StringToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.StringToVisibilityConverter).TypeHandle);
        private void StaticInitializer_15_InvertedStringToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.InvertedStringToVisibilityConverter).TypeHandle);
        private void StaticInitializer_16_InverseBoolToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.InverseBoolToVisibilityConverter).TypeHandle);
        private void StaticInitializer_17_LoadingAndCountVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.LoadingAndCountVisibilityConverter).TypeHandle);
        private void StaticInitializer_18_CollectionCountToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.CollectionCountToVisibilityConverter).TypeHandle);
        private void StaticInitializer_19_ObjectToBoolConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.ObjectToBoolConverter).TypeHandle);
        private void StaticInitializer_20_InvertedBoolToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.InvertedBoolToVisibilityConverter).TypeHandle);
        private void StaticInitializer_21_InverseBoolConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.InverseBoolConverter).TypeHandle);
        private void StaticInitializer_22_BoolToLoginStatusConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.BoolToLoginStatusConverter).TypeHandle);
        private void StaticInitializer_23_Color() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Color).TypeHandle);
        private void StaticInitializer_24_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_25_Byte() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Byte).TypeHandle);
        private void StaticInitializer_26_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_28_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_29_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_30_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_35_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_36_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_40_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_42_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_43_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_44_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_46_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_47_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_49_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_51_ProgressBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar).TypeHandle);
        private void StaticInitializer_53_ProgressBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings).TypeHandle);
        private void StaticInitializer_57_MicaBackdrop() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop).TypeHandle);
        private void StaticInitializer_59_MicaKind() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind).TypeHandle);
        private void StaticInitializer_60_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_61_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_64_InfoBadgeTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings).TypeHandle);
        private void StaticInitializer_65_MarqueeText() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText).TypeHandle);
        private void StaticInitializer_66_RepeatBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.Animation.RepeatBehavior).TypeHandle);
        private void StaticInitializer_67_MarqueeBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior).TypeHandle);
        private void StaticInitializer_68_MarqueeDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection).TypeHandle);
        private void StaticInitializer_69_TextDecorations() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Text.TextDecorations).TypeHandle);
        private void StaticInitializer_70_LocalMusicView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Views.LocalMusicView).TypeHandle);
        private void StaticInitializer_72_NetEaseMusicView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Views.NetEaseMusicView).TypeHandle);
        private void StaticInitializer_73_MainMusicWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.MainMusicWindow).TypeHandle);
        private void StaticInitializer_75_QrLoginWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Views.QrLoginWindow).TypeHandle);
        private void StaticInitializer_76_ItemsRepeater() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater).TypeHandle);
        private void StaticInitializer_78_Layout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Layout).TypeHandle);
        private void StaticInitializer_80_ItemCollectionTransitionProvider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider).TypeHandle);
        private void StaticInitializer_81_ItemsSourceView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView).TypeHandle);
        private void StaticInitializer_82_StackLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.StackLayout).TypeHandle);
        private void StaticInitializer_83_VirtualizingLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout).TypeHandle);
        private void StaticInitializer_85_IndexBasedLayoutOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation).TypeHandle);
        private void StaticInitializer_86_Thickness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Thickness).TypeHandle);
        private void StaticInitializer_87_EmptyStringToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::BlueMusicPlayer.Converters.EmptyStringToVisibilityConverter).TypeHandle);
        private void StaticInitializer_88_InfoBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBar).TypeHandle);
        private void StaticInitializer_89_InfoBarSeverity() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity).TypeHandle);
        private void StaticInitializer_91_ICommand() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Windows.Input.ICommand).TypeHandle);
        private void StaticInitializer_92_InfoBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings).TypeHandle);
        private void StaticInitializer_93_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_94_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_36_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_94_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  BlueMusicPlayer.Converters.EditModeTextConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_EditModeTextConverter;
                userType.StaticInitializer = StaticInitializer_4_EditModeTextConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  BlueMusicPlayer.Converters.BoolToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_BoolToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_5_BoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  BlueMusicPlayer.Converters.TrackInCollectionConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_TrackInCollectionConverter;
                userType.StaticInitializer = StaticInitializer_6_TrackInCollectionConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  BlueMusicPlayer.Converters.PlayPauseGlyphConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_PlayPauseGlyphConverter;
                userType.StaticInitializer = StaticInitializer_7_PlayPauseGlyphConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  BlueMusicPlayer.Converters.BoolToOpacityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_BoolToOpacityConverter;
                userType.StaticInitializer = StaticInitializer_8_BoolToOpacityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  BlueMusicPlayer.Converters.BoolToAccentBrushConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_BoolToAccentBrushConverter;
                userType.StaticInitializer = StaticInitializer_9_BoolToAccentBrushConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  BlueMusicPlayer.Converters.BoolToThicknessConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_BoolToThicknessConverter;
                userType.StaticInitializer = StaticInitializer_10_BoolToThicknessConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  BlueMusicPlayer.Converters.NullToOpacityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_NullToOpacityConverter;
                userType.StaticInitializer = StaticInitializer_11_NullToOpacityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  BlueMusicPlayer.Converters.EnhancedBoolToOpacityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_EnhancedBoolToOpacityConverter;
                userType.StaticInitializer = StaticInitializer_12_EnhancedBoolToOpacityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  BlueMusicPlayer.Converters.LoginStatusConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_LoginStatusConverter;
                userType.StaticInitializer = StaticInitializer_13_LoginStatusConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  BlueMusicPlayer.Converters.StringToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_StringToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_14_StringToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  BlueMusicPlayer.Converters.InvertedStringToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_InvertedStringToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_15_InvertedStringToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  BlueMusicPlayer.Converters.InverseBoolToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_InverseBoolToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_16_InverseBoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  BlueMusicPlayer.Converters.LoadingAndCountVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_LoadingAndCountVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_17_LoadingAndCountVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  BlueMusicPlayer.Converters.CollectionCountToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_18_CollectionCountToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_18_CollectionCountToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  BlueMusicPlayer.Converters.ObjectToBoolConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_ObjectToBoolConverter;
                userType.StaticInitializer = StaticInitializer_19_ObjectToBoolConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  BlueMusicPlayer.Converters.InvertedBoolToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_InvertedBoolToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_20_InvertedBoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  BlueMusicPlayer.Converters.InverseBoolConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_InverseBoolConverter;
                userType.StaticInitializer = StaticInitializer_21_InverseBoolConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  BlueMusicPlayer.Converters.BoolToLoginStatusConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_BoolToLoginStatusConverter;
                userType.StaticInitializer = StaticInitializer_22_BoolToLoginStatusConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  Windows.UI.Color
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_23_Color;
                userType.AddMemberName("A");
                userType.AddMemberName("R");
                userType.AddMemberName("G");
                userType.AddMemberName("B");
                xamlType = userType;
                break;

            case 24:   //  System.ValueType
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_24_ValueType;
                xamlType = userType;
                break;

            case 25:   //  Byte
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_25_Byte;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_26_NavigationView;
                userType.StaticInitializer = StaticInitializer_26_NavigationView;
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_28_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 29:   //  System.Enum
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_29_Enum;
                xamlType = userType;
                break;

            case 30:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_30_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 31:   //  Double
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_35_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 36:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_36_IList;
                userType.CollectionAdd = VectorAdd_36_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_40_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 41:   //  String
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_42_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 43:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_43_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 44:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_44_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_46_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_46_NavigationViewItem;
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("Icon");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_47_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 48:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_49_InfoBadge;
                userType.StaticInitializer = StaticInitializer_49_InfoBadge;
                userType.AddMemberName("Value");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 50:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_51_ProgressBar;
                userType.StaticInitializer = StaticInitializer_51_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 53:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_53_ProgressBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Microsoft.UI.Xaml.Controls.ListViewItem
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.Button
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 57:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_57_MicaBackdrop;
                userType.StaticInitializer = StaticInitializer_57_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_59_MicaKind;
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_60_ProgressRing;
                userType.StaticInitializer = StaticInitializer_60_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_61_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Int32
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 63:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_64_InfoBadgeTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_65_MarqueeText;
                userType.StaticInitializer = StaticInitializer_65_MarqueeText;
                userType.SetContentPropertyName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.Text");
                userType.AddMemberName("Text");
                userType.AddMemberName("Speed");
                userType.AddMemberName("RepeatBehavior");
                userType.AddMemberName("Behavior");
                userType.AddMemberName("Direction");
                userType.AddMemberName("TextDecorations");
                xamlType = userType;
                break;

            case 66:   //  Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_66_RepeatBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_67_MarqueeBehavior;
                userType.AddEnumValue("Ticker", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior.Ticker);
                userType.AddEnumValue("Looping", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior.Looping);
                userType.AddEnumValue("Bouncing", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior.Bouncing);
                xamlType = userType;
                break;

            case 68:   //  CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_68_MarqueeDirection;
                userType.AddEnumValue("Left", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection.Left);
                userType.AddEnumValue("Right", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection.Right);
                userType.AddEnumValue("Up", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection.Up);
                userType.AddEnumValue("Down", global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection.Down);
                xamlType = userType;
                break;

            case 69:   //  Windows.UI.Text.TextDecorations
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_69_TextDecorations;
                userType.AddEnumValue("None", global::Windows.UI.Text.TextDecorations.None);
                userType.AddEnumValue("Underline", global::Windows.UI.Text.TextDecorations.Underline);
                userType.AddEnumValue("Strikethrough", global::Windows.UI.Text.TextDecorations.Strikethrough);
                xamlType = userType;
                break;

            case 70:   //  BlueMusicPlayer.Views.LocalMusicView
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_70_LocalMusicView;
                userType.StaticInitializer = StaticInitializer_70_LocalMusicView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 72:   //  BlueMusicPlayer.Views.NetEaseMusicView
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_72_NetEaseMusicView;
                userType.StaticInitializer = StaticInitializer_72_NetEaseMusicView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  BlueMusicPlayer.MainMusicWindow
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_73_MainMusicWindow;
                userType.StaticInitializer = StaticInitializer_73_MainMusicWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 75:   //  BlueMusicPlayer.Views.QrLoginWindow
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.StaticInitializer = StaticInitializer_75_QrLoginWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.Controls.ItemsRepeater
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_76_ItemsRepeater;
                userType.StaticInitializer = StaticInitializer_76_ItemsRepeater;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Layout");
                userType.AddMemberName("Background");
                userType.AddMemberName("HorizontalCacheLength");
                userType.AddMemberName("ItemTransitionProvider");
                userType.AddMemberName("ItemsSourceView");
                userType.AddMemberName("VerticalCacheLength");
                xamlType = userType;
                break;

            case 77:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 78:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_78_Layout;
                userType.AddMemberName("IndexBasedLayoutOrientation");
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_80_ItemCollectionTransitionProvider;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  Microsoft.UI.Xaml.Controls.ItemsSourceView
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_81_ItemsSourceView;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.StackLayout
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_82_StackLayout;
                userType.StaticInitializer = StaticInitializer_82_StackLayout;
                userType.AddMemberName("Spacing");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 83:   //  Microsoft.UI.Xaml.Controls.VirtualizingLayout
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout"));
                userType.Activator = Activate_83_VirtualizingLayout;
                userType.StaticInitializer = StaticInitializer_83_VirtualizingLayout;
                xamlType = userType;
                break;

            case 84:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 85:   //  Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_85_IndexBasedLayoutOrientation;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.None);
                userType.AddEnumValue("TopToBottom", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.TopToBottom);
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.LeftToRight);
                xamlType = userType;
                break;

            case 86:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_86_Thickness;
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 87:   //  BlueMusicPlayer.Converters.EmptyStringToVisibilityConverter
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_87_EmptyStringToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_87_EmptyStringToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 88:   //  Microsoft.UI.Xaml.Controls.InfoBar
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_88_InfoBar;
                userType.StaticInitializer = StaticInitializer_88_InfoBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.InfoBar.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Severity");
                userType.AddMemberName("Title");
                userType.AddMemberName("Message");
                userType.AddMemberName("ActionButton");
                userType.AddMemberName("CloseButtonCommand");
                userType.AddMemberName("CloseButtonCommandParameter");
                userType.AddMemberName("CloseButtonStyle");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("IsIconVisible");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 89:   //  Microsoft.UI.Xaml.Controls.InfoBarSeverity
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_89_InfoBarSeverity;
                userType.AddEnumValue("Informational", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Informational);
                userType.AddEnumValue("Success", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success);
                userType.AddEnumValue("Warning", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Warning);
                userType.AddEnumValue("Error", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Error);
                xamlType = userType;
                break;

            case 90:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 91:   //  System.Windows.Input.ICommand
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_91_ICommand;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_92_InfoBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_93_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_93_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 94:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_94_IList;
                userType.CollectionAdd = VectorAdd_94_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.CommunityToolkit_Labs_WinUI_MarqueeText_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_1_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_2_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_2_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_3_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_3_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_4_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_4_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_5_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_5_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_6_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_6_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_7_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_7_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_8_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_8_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_9_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_9_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_10_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_10_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_11_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_11_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_12_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_12_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_13_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_13_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_14_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_14_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_15_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_15_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_16_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_17_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_17_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_18_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_19_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_19_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_20_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_20_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_21_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_21_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_22_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_22_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_23_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_23_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_24_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_24_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_25_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_25_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_26_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_26_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_27_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_27_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_28_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_28_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_29_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_29_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_30_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_31_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_31_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_32_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_32_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_33_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_33_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_34_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_34_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_35_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_35_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_36_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_36_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_37_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_37_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_38_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_38_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_39_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_40_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_40_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_41_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_42_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_43_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_43_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_44_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_44_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_45_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_45_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_46_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_46_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_47_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_47_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_48_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_49_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_49_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_50_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_50_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_51_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_51_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_52_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_52_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_53_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_53_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_54_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_54_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_55_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_56_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_56_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_57_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_57_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_58_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_58_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_59_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_59_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_60_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_60_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_61_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_62_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_62_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_63_InfoBadge_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.Value;
        }
        private void set_63_InfoBadge_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.Value = (global::System.Int32)Value;
        }
        private object get_64_InfoBadge_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.IconSource;
        }
        private void set_64_InfoBadge_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_65_InfoBadge_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.TemplateSettings;
        }
        private object get_66_MarqueeText_Text(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.Text;
        }
        private void set_66_MarqueeText_Text(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_67_MarqueeText_Speed(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.Speed;
        }
        private void set_67_MarqueeText_Speed(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.Speed = (global::System.Double)Value;
        }
        private object get_68_MarqueeText_RepeatBehavior(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.RepeatBehavior;
        }
        private void set_68_MarqueeText_RepeatBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.RepeatBehavior = (global::Microsoft.UI.Xaml.Media.Animation.RepeatBehavior)Value;
        }
        private object get_69_MarqueeText_Behavior(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.Behavior;
        }
        private void set_69_MarqueeText_Behavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.Behavior = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior)Value;
        }
        private object get_70_MarqueeText_Direction(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.Direction;
        }
        private void set_70_MarqueeText_Direction(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.Direction = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection)Value;
        }
        private object get_71_MarqueeText_TextDecorations(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            return that.TextDecorations;
        }
        private void set_71_MarqueeText_TextDecorations(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText)instance;
            that.TextDecorations = (global::Windows.UI.Text.TextDecorations)Value;
        }
        private object get_72_ItemsRepeater_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTemplate;
        }
        private void set_72_ItemsRepeater_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_73_ItemsRepeater_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSource;
        }
        private void set_73_ItemsRepeater_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_74_ItemsRepeater_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Layout;
        }
        private void set_74_ItemsRepeater_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_75_ItemsRepeater_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Background;
        }
        private void set_75_ItemsRepeater_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_76_ItemsRepeater_HorizontalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.HorizontalCacheLength;
        }
        private void set_76_ItemsRepeater_HorizontalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.HorizontalCacheLength = (global::System.Double)Value;
        }
        private object get_77_ItemsRepeater_ItemTransitionProvider(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTransitionProvider;
        }
        private void set_77_ItemsRepeater_ItemTransitionProvider(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTransitionProvider = (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider)Value;
        }
        private object get_78_ItemsRepeater_ItemsSourceView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSourceView;
        }
        private object get_79_ItemsRepeater_VerticalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.VerticalCacheLength;
        }
        private void set_79_ItemsRepeater_VerticalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.VerticalCacheLength = (global::System.Double)Value;
        }
        private object get_80_StackLayout_Spacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Spacing;
        }
        private void set_80_StackLayout_Spacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Spacing = (global::System.Double)Value;
        }
        private object get_81_StackLayout_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Orientation;
        }
        private void set_81_StackLayout_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_82_Layout_IndexBasedLayoutOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Layout)instance;
            return that.IndexBasedLayoutOrientation;
        }
        private object get_83_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_83_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_84_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_84_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_85_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_85_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_86_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_86_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_87_InfoBar_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Content;
        }
        private void set_87_InfoBar_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_88_InfoBar_IsOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsOpen;
        }
        private void set_88_InfoBar_IsOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_89_InfoBar_Severity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Severity;
        }
        private void set_89_InfoBar_Severity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Severity = (global::Microsoft.UI.Xaml.Controls.InfoBarSeverity)Value;
        }
        private object get_90_InfoBar_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Title;
        }
        private void set_90_InfoBar_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_91_InfoBar_Message(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Message;
        }
        private void set_91_InfoBar_Message(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_92_InfoBar_ActionButton(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ActionButton;
        }
        private void set_92_InfoBar_ActionButton(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ActionButton = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)Value;
        }
        private object get_93_InfoBar_CloseButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommand;
        }
        private void set_93_InfoBar_CloseButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_94_InfoBar_CloseButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommandParameter;
        }
        private void set_94_InfoBar_CloseButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_95_InfoBar_CloseButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonStyle;
        }
        private void set_95_InfoBar_CloseButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_96_InfoBar_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ContentTemplate;
        }
        private void set_96_InfoBar_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_97_InfoBar_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IconSource;
        }
        private void set_97_InfoBar_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_98_InfoBar_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsClosable;
        }
        private void set_98_InfoBar_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_99_InfoBar_IsIconVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsIconVisible;
        }
        private void set_99_InfoBar_IsIconVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsIconVisible = (global::System.Boolean)Value;
        }
        private object get_100_InfoBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.TemplateSettings;
        }
        private object get_101_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_102_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_102_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_103_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_104_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_105_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_105_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_106_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_106_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_107_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember xamlMember = null;
            global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Windows.UI.Color.A":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_1_Color_A;
                xamlMember.Setter = set_1_Color_A;
                break;
            case "Windows.UI.Color.R":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_2_Color_R;
                xamlMember.Setter = set_2_Color_R;
                break;
            case "Windows.UI.Color.G":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_3_Color_G;
                xamlMember.Setter = set_3_Color_G;
                break;
            case "Windows.UI.Color.B":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_4_Color_B;
                xamlMember.Setter = set_4_Color_B;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_5_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_6_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_7_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_8_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_9_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_10_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_11_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_12_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_13_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_14_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_NavigationView_ContentOverlay;
                xamlMember.Setter = set_15_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_17_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_19_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_NavigationView_Header;
                xamlMember.Setter = set_20_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_21_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_22_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_23_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_24_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_25_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_26_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_27_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_28_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_29_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_31_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_32_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_33_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_NavigationView_PaneFooter;
                xamlMember.Setter = set_34_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_NavigationView_PaneHeader;
                xamlMember.Setter = set_35_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_NavigationView_PaneTitle;
                xamlMember.Setter = set_36_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_NavigationView_SelectedItem;
                xamlMember.Setter = set_37_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_38_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_40_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_43_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_NavigationViewItem_Icon;
                xamlMember.Setter = set_44_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_45_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_46_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_47_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_49_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_50_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_51_NavigationViewItemBase_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_52_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ProgressBar_ShowError;
                xamlMember.Setter = set_53_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ProgressBar_ShowPaused;
                xamlMember.Setter = set_54_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_55_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_MicaBackdrop_Kind;
                xamlMember.Setter = set_56_MicaBackdrop_Kind;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_ProgressRing_IsActive;
                xamlMember.Setter = set_57_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_58_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_ProgressRing_Maximum;
                xamlMember.Setter = set_59_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_ProgressRing_Minimum;
                xamlMember.Setter = set_60_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_61_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_ProgressRing_Value;
                xamlMember.Setter = set_62_ProgressRing_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.Value":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Value", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_InfoBadge_Value;
                xamlMember.Setter = set_63_InfoBadge_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.IconSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_InfoBadge_IconSource;
                xamlMember.Setter = set_64_InfoBadge_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.TemplateSettings":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_InfoBadge_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.Text":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_MarqueeText_Text;
                xamlMember.Setter = set_66_MarqueeText_Text;
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.Speed":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Speed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_MarqueeText_Speed;
                xamlMember.Setter = set_67_MarqueeText_Speed;
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.RepeatBehavior":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "RepeatBehavior", "Microsoft.UI.Xaml.Media.Animation.RepeatBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_MarqueeText_RepeatBehavior;
                xamlMember.Setter = set_68_MarqueeText_RepeatBehavior;
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.Behavior":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Behavior", "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_MarqueeText_Behavior;
                xamlMember.Setter = set_69_MarqueeText_Behavior;
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.Direction":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Direction", "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_MarqueeText_Direction;
                xamlMember.Setter = set_70_MarqueeText_Direction;
                break;
            case "CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText.TextDecorations":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.MarqueeTextRns.MarqueeText");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TextDecorations", "Windows.UI.Text.TextDecorations");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_MarqueeText_TextDecorations;
                xamlMember.Setter = set_71_MarqueeText_TextDecorations;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_ItemsRepeater_ItemTemplate;
                xamlMember.Setter = set_72_ItemsRepeater_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_ItemsRepeater_ItemsSource;
                xamlMember.Setter = set_73_ItemsRepeater_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_ItemsRepeater_Layout;
                xamlMember.Setter = set_74_ItemsRepeater_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Background":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_ItemsRepeater_Background;
                xamlMember.Setter = set_75_ItemsRepeater_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "HorizontalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_ItemsRepeater_HorizontalCacheLength;
                xamlMember.Setter = set_76_ItemsRepeater_HorizontalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTransitionProvider":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ItemTransitionProvider", "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_ItemsRepeater_ItemTransitionProvider;
                xamlMember.Setter = set_77_ItemsRepeater_ItemTransitionProvider;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ItemsSourceView", "Microsoft.UI.Xaml.Controls.ItemsSourceView");
                xamlMember.Getter = get_78_ItemsRepeater_ItemsSourceView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "VerticalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_ItemsRepeater_VerticalCacheLength;
                xamlMember.Setter = set_79_ItemsRepeater_VerticalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Spacing":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_StackLayout_Spacing;
                xamlMember.Setter = set_80_StackLayout_Spacing;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Orientation":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_StackLayout_Orientation;
                xamlMember.Setter = set_81_StackLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.Layout.IndexBasedLayoutOrientation":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IndexBasedLayoutOrientation", "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation");
                xamlMember.Getter = get_82_Layout_IndexBasedLayoutOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_83_Thickness_Left;
                xamlMember.Setter = set_83_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_84_Thickness_Top;
                xamlMember.Setter = set_84_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_85_Thickness_Right;
                xamlMember.Setter = set_85_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_86_Thickness_Bottom;
                xamlMember.Setter = set_86_Thickness_Bottom;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Content":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_InfoBar_Content;
                xamlMember.Setter = set_87_InfoBar_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsOpen":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_InfoBar_IsOpen;
                xamlMember.Setter = set_88_InfoBar_IsOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Severity":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Severity", "Microsoft.UI.Xaml.Controls.InfoBarSeverity");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_InfoBar_Severity;
                xamlMember.Setter = set_89_InfoBar_Severity;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Title":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_InfoBar_Title;
                xamlMember.Setter = set_90_InfoBar_Title;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Message":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_InfoBar_Message;
                xamlMember.Setter = set_91_InfoBar_Message;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ActionButton":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ActionButton", "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_InfoBar_ActionButton;
                xamlMember.Setter = set_92_InfoBar_ActionButton;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommand":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CloseButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_InfoBar_CloseButtonCommand;
                xamlMember.Setter = set_93_InfoBar_CloseButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommandParameter":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CloseButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_InfoBar_CloseButtonCommandParameter;
                xamlMember.Setter = set_94_InfoBar_CloseButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonStyle":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "CloseButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_InfoBar_CloseButtonStyle;
                xamlMember.Setter = set_95_InfoBar_CloseButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ContentTemplate":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_InfoBar_ContentTemplate;
                xamlMember.Setter = set_96_InfoBar_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IconSource":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_InfoBar_IconSource;
                xamlMember.Setter = set_97_InfoBar_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsClosable":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_InfoBar_IsClosable;
                xamlMember.Setter = set_98_InfoBar_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisible":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_InfoBar_IsIconVisible;
                xamlMember.Setter = set_99_InfoBar_IsIconVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.TemplateSettings":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_InfoBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_101_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_TreeViewNode_Content;
                xamlMember.Setter = set_102_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_105_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_105_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_106_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_107_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2505")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::BlueMusicPlayer.BlueMusicPlayer_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

